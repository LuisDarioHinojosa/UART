// Medio adaptado de aqui: https://www.nandland.com/vhdl/modules/module-uart-serial-port-rs232.html
`timescale 1ns/10ps
module Transmiter_TB;

    parameter c_CLOCK_PERIOD_NS = 100;
    parameter c_CLKS_PER_BIT    = 5208;
    parameter c_BIT_PERIOD      = 8600;


    reg r_Clock = 0;
    reg r_Tx_DV = 0;
    wire w_Tx_Done;
    wire activeFlag = 0;
    wire serialFlag = 0;
    reg [7:0] r_Tx_Byte = 0;








    uart_tx #(.CLKS_PER_BIT(c_CLKS_PER_BIT)) UART_TX_INST
    (   .clk(r_Clock),
        .dataValid(r_Tx_DV),
        .inputByte(r_Tx_Byte),
        .oActive(activeFlag),
        .serial(serialFlag),
        .oDone(w_Tx_Done)
    );




    initial
        begin
        
            // Tell UART to send a command (exercise Tx)
            @(posedge r_Clock);
            @(posedge r_Clock);
            r_Tx_DV <= 1'b1;
            r_Tx_Byte <= 8'hAB;
            @(posedge r_Clock);
            r_Tx_DV <= 1'b0;
            @(posedge w_Tx_Done);
            
            // Send a command to the UART (exercise Rx)
            @(posedge r_Clock);
            UART_WRITE_BYTE(8'h3F);
            @(posedge r_Clock);
                    
            // Check that the correct command was received
            if (w_Rx_Byte == 8'h3F)
            $display("Test Passed - Correct Byte Received");
            else
            $display("Test Failed - Incorrect Byte Received");
        
        end



    always
        #(c_CLOCK_PERIOD_NS/2) r_Clock <= !r_Clock;

endmodule
